package days02;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;

import com.util.DBConn;

import ord.doit.domain.EmpVO;

//192.168.10.162 --쌤거 이거 local에 넣으면 됨
/**
 * @author User
 *			240903
 *		[jdbc] emp테이블의 모든 사원 정보 조회
 *			org.doit.domain 패키지
 *				ㄴ EmpVO.java   (  Value Object )
 *			ArrayList<EmpVO> list
 *			dispEmp() 출력함수
 *
 *			com.util 패키지
 *				ㄴ DBConn.java 
 *						ㄴ Connection.getConnection() 메서드 구현
 *						ㄴ Connection.getConnection() 메서드 구현
 *						ㄴ Connection.getConnection() 메서드 구현
 *						ㄴ Connection.getConnection() 메서드 구현 (오버라이딩....)
 *
 */
public class Ex01_04 {



	public static void main(String[] args) {

		//1. JDBC 로딩
		//		String className = "oracle.jdbc.driver.OracleDriver";
		//		String url =  "jdbc:oracle:thin:@localhost:1521:xe";
		//		String user = "SCOTT";
		//		String password= "TIGER";
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql  = " SELECT * "				
				+ " FROM emp ";

		//테이블 자료형대로 맞추기 ( 숫자 스트링주거나 해도 되긴함)
		int empno;
		String ename;
		String job;
		int mgr;
		//String hiredate; //Date, String, LocalDateTime도 됨
		LocalDateTime hiredate; 
		double sal;
		double comm;
		int deptno;
		
		ArrayList<EmpVO> list = new ArrayList<EmpVO>();
		EmpVO vo;

		try {
			//			//1. jdbc 드라이버 로딩 class.forname
			//			Class.forName(className);
			//			//2. connection 객체 drivermanager
			//			conn = DriverManager.getConnection(url,user,password);
			//CRUD 작업 -- statement 객체 

			//DBConn 있으니 이제 필요없다


			conn = DBConn.getConnection();

			stmt = conn.createStatement(); //일꾼 객체 생성
			rs = stmt.executeQuery(sql); 

			while ( rs.next() ) {
				empno = rs.getInt("empno");
				ename = rs.getString("ename");
				job = rs.getString("job");
				mgr = rs.getInt("mgr");
				hiredate = rs.getTimestamp("hiredate").toLocalDateTime();
				sal = rs.getInt("sal");
				comm = rs.getDouble("comm");
				deptno = rs.getInt("deptno");
				
				vo = new EmpVO(empno, ename, job, mgr, hiredate, sal, comm, deptno);
				list.add(vo);
				
//				System.out.printf("%d\t %s\t %s\t %d\t %tF\t %d\t %f\t %s\n", empno, ename, job, mgr, hiredate, sal, comm, deptno); // %tF

				// 0.0000 말고 NULL 찍으려면 ??
			
			}//while
			
			dispEmp(list);


		}

		catch (SQLException e) {

			e.printStackTrace();
		} finally {
			try {
				rs.close(); //닫는 순서 중요
				stmt.close(); //일꾼도 닫아줘야함
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}



	}//main

	public static void dispEmp(ArrayList<EmpVO> list) {
		
		if ( list.size() == 0 ) {
			System.out.println("사원이 존재하지 않습니다.");
			return;
		}
		//사원정보출력
		Iterator<EmpVO> ir = list.iterator();
		while (ir.next()) {
			EmpVO vo = ir.next();
			System.out.println(vo); //EmpVO에 롬복으로 ToString있어서 이렇게만 해도 됨
		}
	}
	
	
	
}//class
