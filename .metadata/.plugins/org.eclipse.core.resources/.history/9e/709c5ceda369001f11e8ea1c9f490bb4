package days02;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.util.ArrayList;

import com.util.DBConn;

import ord.doit.domain.EmpVO;

/**
 * [jdbc] emp+dept+salgrade => EmpDeptSalGradeVO
 *
 */
public class Ex03 {

	public static void main(String[] args) {

	/*
		--사원번호 사원명 부서명 입사일자, pay, 등급 조회? => 조인 (emp, dept,salgrade)

				SELECT empno, ename, dname, hiredate, sal+NVL(comm,0) pay
				FROM emp e JOIN dept d ON e.deptno = d.deptno
				                JOIN salgrade s ON e.sal BETWEEN s.losal AND s.hisal;
				-- 각각의 VO객체를 만드는게 아니라 얘넬 받는 VO를 만들면 됨..
*/
		
		//Ex01_04 일단 메인함수 전부 복붙
		
		
		//1. JDBC 로딩
		//		String className = "oracle.jdbc.driver.OracleDriver";
		//		String url =  "jdbc:oracle:thin:@localhost:1521:xe";
		//		String user = "SCOTT";
		//		String password= "TIGER";
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql  = " SELECT * "				
				+ " FROM emp ";

		//테이블 자료형대로 맞추기 ( 숫자 스트링주거나 해도 되긴함)
		int empno;
		String ename;
		String job;
		int mgr;
		//String hiredate; //Date, String, LocalDateTime도 됨
		LocalDateTime hiredate; 
		double sal;
		double comm;
		int deptno;

		ArrayList<EmpVO> list = new ArrayList<EmpVO>();
		EmpVO vo;

		try {
			//			//1. jdbc 드라이버 로딩 class.forname
			//			Class.forName(className);
			//			//2. connection 객체 drivermanager
			//			conn = DriverManager.getConnection(url,user,password);
			//CRUD 작업 -- statement 객체 

			//DBConn 있으니 이제 필요없다


			conn = DBConn.getConnection();

			stmt = conn.createStatement(); //일꾼 객체 생성
			rs = stmt.executeQuery(sql); 

			while ( rs.next() ) {
				empno = rs.getInt("empno");
				ename = rs.getString("ename");
				job = rs.getString("job");
				mgr = rs.getInt("mgr");
				hiredate = rs.getTimestamp("hiredate").toLocalDateTime();
				sal = rs.getInt("sal");
				comm = rs.getDouble("comm");
				deptno = rs.getInt("deptno");

				vo = new EmpVO(empno, ename, job, mgr, hiredate, sal, comm, deptno);
				list.add(vo);

				//				System.out.printf("%d\t %s\t %s\t %d\t %tF\t %d\t %f\t %s\n", empno, ename, job, mgr, hiredate, sal, comm, deptno); // %tF

				// 0.0000 말고 NULL 찍으려면 ??

			}//while

			dispEmp(list);


		}

		catch (SQLException e) {

			e.printStackTrace();
		} finally {
			try {
				rs.close(); //닫는 순서 중요
				stmt.close(); //일꾼도 닫아줘야함
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		

	}//main

}//class
