package days04.board.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

import com.util.DBConn;

import days04.board.domain.BoardDTO;
import days04.board.service.BoardService;

public class BoardController {

   private int selectedNumber ;
   private Scanner scanner = null;
   private BoardService service;
   
   //페이징 처리 필요한 필드 선언
   private int currentPage = 1;
   
   
   public BoardController() {
      super();
      this.scanner = new Scanner(System.in);
   }

   // 1. 생성자를 통한 DI
   public BoardController(BoardService service) {
      this();
      this.service = service;
   }

   // 게시판 기능을 사용...
   public void boardStart() {
      while (true) {
         메뉴출력();
         메뉴선택();
         메뉴처리();
      } // while
   }


   private void 메뉴출력() {
      String [] menu = {"새글","목록","보기","수정","삭제","검색","종료"};
      System.out.println("[ 메뉴 ]");
      for (int i = 0; i < menu.length; i++) {
         System.out.printf("%d. %s\t", i+1, menu[i]);
      }
      System.out.println();
   }

   private void 메뉴선택() {
      System.out.print("> 메뉴 선택하세요 ? ");
      this.selectedNumber = this.scanner.nextInt();      
      this.scanner.nextLine(); //   \r\n 제거
   }

   private void 메뉴처리() {
      switch (this.selectedNumber) {
      case 1:// 새글   
         새글쓰기();
         break;
      case 2:// 목록
         목록보기();
         break;
      case 3:// 보기
         상세보기();
         break;
      case 4:// 수정
         수정하기();
         break;
      case 5:// 삭제
         삭제하기();
         break;
      case 6:// 검색
         검색하기();
         break;
      case 7:// 종료   
         exit();
         break; 
      } // switch

      일시정지();
   }

   private void 검색하기() {
      // TODO Auto-generated method stub

   }

   private void 삭제하기() {
      // TODO Auto-generated method stub

   }

   private void 수정하기() {
      // TODO Auto-generated method stub

   }

   private void 상세보기() {
      // TODO Auto-generated method stub

   }

   private void 목록보기() {
	      
	      ArrayList<BoardDTO> list = this.service.selectService();
	      
	      // 출력담당객체(View) + list
	      System.out.println("\t\t\t  게시판");
	      System.out.println("-------------------------------------------------------------------------");
	      System.out.printf("%s\t%-40s\t%s\t%-10s\t%s\n", 
	            "글번호","글제목","글쓴이","작성일","조회수");
	      System.out.println("-------------------------------------------------------------------------");
	      if (list == null) {
	         System.out.println("\t\t> 게시글 존재 X");   
	      } else {
	         Iterator<BoardDTO> ir = list.iterator();
	         while (ir.hasNext()) {
	            BoardDTO dto =  ir.next();
	            System.out.printf("%d\t%-30s  %s\t%-10s\t%d\n",
	                  dto.getSeq(), 
	                  dto.getTitle(),
	                  dto.getWriter(),
	                  dto.getWritedate(),
	                  dto.getReaded());   
	         } // while
	      }

	      System.out.println("-------------------------------------------------------------------------");      
	      System.out.println("\t\t[1] 2 3 4 5 6 7 8 9 10 NEXT");
	      System.out.println("-------------------------------------------------------------------------");
	   }

   private void 새글쓰기() {
      // TODO Auto-generated method stub

   }

   private void 일시정지() {
      System.out.println(" \t\t 계속하려면 엔터치세요.");
      try {
         System.in.read();
         System.in.skip(System.in.available()); // 13, 10
      } catch (IOException e) { 
         e.printStackTrace();
      }
   }

   // 프로그램 종료
   private void exit() {
      DBConn.close();
      System.out.println("\t\t\t  프로그램 종료!!!");
      System.exit(-1);
   }

}

/*
게시판 테이블 , 시퀀스 생성
BoardDTO
BoardDAO 인터페이스
  ㄴ ArrayList<BoardDTO> select() throws SQLException
BoardDAOImpl 구현클래스
  ㄴ ArrayList<BoardDTO> selectService()
      트랜잭션
       return    this.dao.select();
       문자/메시지 전송
       로그 기록 작업
       커밋

       롤백

단위테스트
  BoardDAOImpTest.java       this.dao.select()
  BoardServiceTest.java      this.service.selectService(); 
 * */

/*
 *    ojdbc6.jar
  1. 
     Class.forName();
     Connection conn = DriverManager.getConnection(url, user, password);
  1-1.Connection conn =  DBConn.getConnection();

  3. CRUD 작업
  String sql = "";
  stmt;
  pstmt;
  cstmt;
  I/U/D   int rowCount =  executeUpdate()
  S       rs =  executeQuery()
  while(rs.next()){

  }      
  4. 
  con.close();    
 * */